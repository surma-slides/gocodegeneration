Code Generation in Go
Underappreciated tools in the core
19 Aug 2014
Tags: #golang

Alexander Surma
GDG Berlin Golang
surma@surmair.de
http://surma-slides.github.io/gocodegeneration
@surmair

* Gophers know Go

… and they always have!

- `gofmt` is written in Go
- `godoc` is written in Go
- `gofix` (remember?) was written in Go
- in Go 1.4, the compiler will be written in Go

all of these use the `go/*` packages.

* BSc Computer Sciences – EBNF and ASTs

.iframe http://golang.org/ref/spec#Struct_types 220 800

Intermezzo: Semicolons

.iframe http://golang.org/ref/spec#Blocks 160 800

* Example

.code ast.go /STRUCT START OMIT/,/STRUCT END OMIT/

turns into

# Compiled ast.dot with http://graphviz-dev.appspot.com/
.image ast.png 380 550

* Example (cont’d)

.code ast.go /CODE START OMIT/,/CODE END OMIT/

#* Example (cont’d)

.play ast.go /PARSE START OMIT/,/PARSE END OMIT/

* You won’t see this title

.iframe http://godoc.org/go/ast#File 250 800
.iframe http://godoc.org/go/ast#GenDecl 210 800
.iframe http://godoc.org/go/ast#TypeSpec 170 800

* GENERICS!!!!11

* The dream

.play -edit generics.go /GENERIC CODE START OMIT/,/GENERIC CODE END OMIT/

* The “implementation” – quick’n’dirty

.code generics.go /PARSE START OMIT/,/PARSE END OMIT/
.code generics.go /VISITOR START OMIT/,/VISITOR END OMIT/

  ... unimportant details ...

.code generics.go /TEMPLATE RENDERING START OMIT/,/TEMPLATE RENDERING END OMIT/

* The “implementation” (cont’d)

.code generics.go /TEMPLATE START OMIT/,/TEMPLATE END OMIT/

