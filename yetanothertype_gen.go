// Generated by: gen
// TypeWriter: gen
// Directive: +gen on main.YetAnotherType

// See http://clipperhouse.github.io/gen for documentation

package main

// YetAnotherTypes is a slice of type YetAnotherType. Use it where you would use []YetAnotherType.
type YetAnotherTypes []YetAnotherType

// Any verifies that one or more elements of YetAnotherTypes return true for the passed func. See: http://clipperhouse.github.io/gen/#Any
func (rcv YetAnotherTypes) Any(fn func(YetAnotherType) bool) bool {
	for _, v := range rcv {
		if fn(v) {
			return true
		}
	}
	return false
}

// Where returns a new YetAnotherTypes slice whose elements return true for func. See: http://clipperhouse.github.io/gen/#Where
func (rcv YetAnotherTypes) Where(fn func(YetAnotherType) bool) (result YetAnotherTypes) {
	for _, v := range rcv {
		if fn(v) {
			result = append(result, v)
		}
	}
	return result
}

// Count gives the number elements of YetAnotherTypes that return true for the passed func. See: http://clipperhouse.github.io/gen/#Count
func (rcv YetAnotherTypes) Count(fn func(YetAnotherType) bool) (result int) {
	for _, v := range rcv {
		if fn(v) {
			result++
		}
	}
	return
}
